@use 'animate.scss';
@use 'color.scss';
@use 'font.scss';
@use 'space.scss';

@mixin md {
  @media screen and (min-width: 768px) {
    @content;
  }
}

@mixin lg {
  @media screen and (min-width: 1024px) {
    @content;
  }
}

@mixin dashed-outline($color: currentColor) {
  outline: none;

  &:focus-visible {
    outline: calc(var(--space-1x) / 2) dotted $color;
    outline-offset: var(--space-1x);
  }
}

:global(*) {
  margin: 0;
  padding: 0;
  border: 0;
}

:global(*, *::before, *::after) {
  box-sizing: inherit;
}

:global(html) {
  height: 100%;
  box-sizing: border-box;
  background-color: var(--color-surface);
  color: var(--color-text);
  transition-property: color, background-color;
  transition-duration: var(--duration-default);
}

:global(body) {
  height: 100%;
  font-family: var(--font-sans);
  font-size: var(--font-100);
  line-height: var(--line-height-default);
}

:global(h1, h2, h3, h4, h5, h6) {
  font-family: var(--font-serif);
  font-weight: bold;
}

:global(h1) {
  font-size: var(--font-700);
  margin-bottom: var(--space-4x);
}

:global(h2) {
  font-size: var(--font-500);
}

:global(h3, h4, h5, h6) {
  font-size: var(--font-300);
}

:global(hr) {
  border: 1px solid var(--color-text-muted);
  margin: var(--space-4x) 0;
}

:global(p) {
  font-family: var(--font-sans);
  font-size: var(--font-100);
  line-height: var(--line-height-default);
  margin-bottom: var(--space-4x);
}

:global(ul) {
  margin-left: var(--space-4x);
  list-style: disc;
}

:global(li) {
  margin-bottom: var(--space-2x);
  line-height: var(--line-height-tight);
}

:global(img) {
  width: 100%;
  color: var(--color-text-muted);
  font-size: var(--font-050);
  font-style: italic;
}

:global(code, pre) {
  font-family: var(--font-mono);
}

:global(blockquote) {
  color: var(--color-text-muted);
  padding-left: var(--space-4x);
  border-left: 4px solid var(--color-text-muted);
}
